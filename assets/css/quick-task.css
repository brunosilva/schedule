.dnone {
  display: none !important; }

/* Cores default */
/* Cores midias sociais */
.quick-task {
  padding: 25px 0 25px 0;
  background-color: #F0FFFF; }
  .quick-task .container h2.title {
    margin-bottom: 10px; }
  .quick-task .container .row div p {
    margin-bottom: 0;
    font-family: Raleway;
    font-weight: 500;
    letter-spacing: 1px;
    display: flex;
    justify-content: space-between; }
  .quick-task .container .row div .card-dashboard {
    border: 1px solid #B0E0E6;
    background-color: #ffffff;
    border-radius: 4px;
    height: 200px;
    overflow-y: auto !important;
    padding: 10px;
    margin-bottom: 15px; }
    .quick-task .container .row div .card-dashboard .new-item {
      padding-top: 5px;
      padding-bottom: 5px;
      border-bottom: 1px solid #b2e1e7; }
      .quick-task .container .row div .card-dashboard .new-item .row-identity {
        display: flex;
        flex-direction: column; }
        .quick-task .container .row div .card-dashboard .new-item .row-identity span {
          font-size: 12px; }
        .quick-task .container .row div .card-dashboard .new-item .row-identity .span-name {
          font-weight: 600; }
  .quick-task .container .row .card-todo .new-task {
    overflow: hidden;
    transform: translateY(-25px);
    padding-left: 7px;
    padding-right: 7px;
    color: transparent;
    background-color: transparent; }
  .quick-task .container .row .card-todo:hover .card-dashboard {
    border-top-right-radius: 0px !important; }
  .quick-task .container .row .card-todo:hover .new-task {
    overflow: visible;
    transform: translateY(0);
    transition: all 0.5s cubic-bezier(0.785, 0.135, 0.15, 0.86);
    padding-left: 7px;
    padding-right: 7px;
    color: #ffffff;
    text-decoration: none;
    background-color: #3aad4d; }
    .quick-task .container .row .card-todo:hover .new-task:hover {
      background-color: #277434; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
